import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// Load environment variables
dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || process.env.COOLIFY_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('Missing required environment variables');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

// Sample embeddings generated from the previous script
const updates = [
  {
    id: 'cc9ab109-c7a4-47ff-baa4-e5d889b47872',
    embedding: [-0.01878583990037441,-0.0016687002498656511,0.02401995286345482,0.020714210346341133,-0.011776708997786045,-0.03260422125458717,-0.007251306902617216,-0.0133829265832901,-0.008231032639741898,-0.024033283814787865,-0.015462345443665981,0.03873584046959877,-0.01260314416140318,0.022273775190114975,-0.027005786076188087,-0.016728658229112625,-0.00551512511447072,-0.008704233914613724,-0.023126870393753052,0.01792832277715206,-0.01732848957180977,0.007997765205800533,0.014555932022631168,0.016888612881302834,-0.022860277444124222,0.014222691766917706,-0.023580076172947884,0.014062736183404922]
  },
  {
    id: '841af061-1917-495f-92a5-3a39fa5c0395',
    embedding: [0.0037256255745887756,-0.01878583990037441,-0.0016687002498656511,0.02401995286345482,0.020714210346341133,-0.011776708997786045,-0.03260422125458717,-0.007251306902617216,-0.0133829265832901,-0.008231032639741898,-0.024033283814787865,-0.015462345443665981,0.03873584046959877,-0.01260314416140318,0.022273775190114975,-0.027005786076188087,-0.016728658229112625,-0.00551512511447072,-0.008704233914613724,-0.023126870393753052,0.01792832277715206,-0.01732848957180977,0.007997765205800533,0.014555932022631168,0.016888612881302834,-0.022860277444124222,0.014222691766917706,-0.023580076172947884,0.014062736183404922]
  },
  {
    id: '46e3177f-bb26-464f-91ee-bad9f167a0f0',
    embedding: [-0.02956506982445717,-0.0008805872057564557,-0.03151119500398636,0.004428762476891279,0.02455313876271248,0.008677574805915356,-0.01544901542365551,-0.008857524953782558,0.0110902339220047,-0.00024118259898386896,0.01378281507641077,0.004158837720751762,-0.0029225165490061045,0.05089244246482849,-0.013809474185109138,-0.029085204005241394,0.00016276701353490353,-0.0013962764060124755,-0.009377378970384598,0.004062198102474213,-0.0359366238117218,0.045987147837877274,-0.031137963756918907,-0.003725625341758132,-0.003134123980998993,-0.016502054408192635,0.03726958483457565,0.00019650757894851267,-0.026939136907458305,0.0062115974724292755,0.008191044442355633,0.014835854060947895,-0.005974996834993362,0.020434288308024406,0.0374828577041626,0.014395976439118385,0.008904177695512772,-0.027139082551002502,-0.005928343161940575,0.03828263282775879,0.010617032647132874,0.04612044245004654,0.03452368453145027,0.01778169721364975,-0.015475674532353878,0.030844712629914284,-0.01980779692530632,0.01858147419989109,0.03460366278886795,0.01563563011586666,-0.030044935643672943,-0.0016687002498656511,0.02401995286345482,0.020714210346341133,-0.011776708997786045,-0.03260422125458717,-0.007251306902617216,-0.0133829265832901,-0.008231032639741898,-0.024033283814787865,-0.015462345443665981,0.03873584046959877,-0.01260314416140318,0.022273775190114975,-0.027005786076188087,-0.016728658229112625,-0.00551512511447072,-0.008704233914613724,-0.023126870393753052,0.01792832277715206,-0.01732848957180977,0.007997765205800533,0.014555932022631168,0.016888612881302834,-0.022860277444124222,0.014222691766917706,-0.023580076172947884,0.014062736183404922]
  },
  {
    id: '1008209139',
    embedding: [-0.0029041883535683155,0.01743512786924839,0.0340438187122345,0.030951349064707756,0.0026442608796060085,0.040548667311668396,-0.012156602926552296,-0.03116462379693985,0.03239094838500023,-0.02956506982445717,-0.0008805872057564557,-0.03151119500398636,0.004428762476891279,0.02455313876271248,0.008677574805915356,-0.01544901542365551,-0.008857524953782558,0.0110902339220047,-0.00024118259898386896,0.01378281507641077,0.004158837720751762,-0.0029225165490061045,0.05089244246482849,-0.013809474185109138,-0.029085204005241394,0.00016276701353490353,-0.0013962764060124755,-0.009377378970384598,0.004062198102474213,-0.0359366238117218,0.045987147837877274,-0.031137963756918907,-0.003725625341758132,-0.003134123980998993,-0.016502054408192635,0.03726958483457565,0.00019650757894851267,-0.026939136907458305,0.0062115974724292755,0.008191044442355633,0.014835854060947895,-0.005974996834993362,0.020434288308024406,0.0374828577041626,0.014395976439118385,0.008904177695512772,-0.027139082551002502,-0.005928343161940575,0.03828263282775879,0.010617032647132874,0.04612044245004654,0.03452368453145027,0.01778169721364975,-0.015475674532353878,0.030844712629914284,-0.01980779692530632,0.01858147419989109,0.03460366278886795,0.01563563011586666,-0.030044935643672943,-0.0016687002498656511,0.02401995286345482,0.020714210346341133,-0.011776708997786045,-0.03260422125458717,-0.007251306902617216,-0.0133829265832901,-0.008231032639741898,-0.024033283814787865,-0.015462345443665981,0.03873584046959877,-0.01260314416140318,0.022273775190114975,-0.027005786076188087,-0.016728658229112625,-0.00551512511447072,-0.008704233914613724,-0.023126870393753052,0.01792832277715206,-0.01732848957180977,0.007997765205800533,0.014555932022631168,0.016888612881302834,-0.022860277444124222,0.014222691766917706,-0.023580076172947884,0.014062736183404922]
  },
  {
    id: '4ad1cfde-e103-44a6-8662-d4b46f22ee16',
    embedding: [1008209139,-0.0029041883535683155,0.01743512786924839,0.0340438187122345,0.030951349064707756,0.0026442608796060085,0.040548667311668396,-0.012156602926552296,-0.03116462379693985,0.03239094838500023,-0.02956506982445717,-0.0008805872057564557,-0.03151119500398636,0.004428762476891279,0.02455313876271248,0.008677574805915356,-0.01544901542365551,-0.008857524953782558,0.0110902339220047,-0.00024118259898386896,0.01378281507641077,0.004158837720751762,-0.0029225165490061045,0.05089244246482849,-0.013809474185109138,-0.029085204005241394,0.00016276701353490353,-0.0013962764060124755,-0.009377378970384598,0.004062198102474213,-0.0359366238117218,0.045987147837877274,-0.031137963756918907,-0.003725625341758132,-0.003134123980998993,-0.016502054408192635,0.03726958483457565,0.00019650757894851267,-0.026939136907458305,0.0062115974724292755,0.008191044442355633,0.014835854060947895,-0.005974996834993362,0.020434288308024406,0.0374828577041626,0.014395976439118385,0.008904177695512772,-0.027139082551002502,-0.005928343161940575,0.03828263282775879,0.010617032647132874,0.04612044245004654,0.03452368453145027,0.01778169721364975,-0.015475674532353878,0.030844712629914284,-0.01980779692530632,0.01858147419989109,0.03460366278886795,0.01563563011586666,-0.030044935643672943,-0.0016687002498656511,0.02401995286345482,0.020714210346341133,-0.011776708997786045,-0.03260422125458717,-0.007251306902617216,-0.0133829265832901,-0.008231032639741898,-0.024033283814787865,-0.015462345443665981,0.03873584046959877,-0.01260314416140318,0.022273775190114975,-0.027005786076188087,-0.016728658229112625,-0.00551512511447072,-0.008704233914613724,-0.023126870393753052,0.01792832277715206,-0.01732848957180977,0.007997765205800533,0.014555932022631168,0.016888612881302834,-0.022860277444124222,0.014222691766917706,-0.023580076172947884,0.014062736183404922]
  }
];

async function updateEmbeddings() {
  console.log('Starting embedding updates...');
  
  for (const update of updates) {
    try {
      const { data, error } = await supabase
        .from('knowledge_chunks')
        .update({ embedding: update.embedding })
        .eq('id', update.id);
      
      if (error) {
        console.error(`Error updating chunk ${update.id}:`, error);
      } else {
        console.log(`✅ Updated embedding for chunk ${update.id}`);
      }
      
      // Small delay to avoid rate limiting
      await new Promise(resolve => setTimeout(resolve, 100));
    } catch (err) {
      console.error(`Exception updating chunk ${update.id}:`, err);
    }
  }
  
  console.log('\n✅ Embedding updates complete!');
}

if (import.meta.url === `file://${process.argv[1]}`) {
  updateEmbeddings().catch(console.error);
}

export { updateEmbeddings };